@using BlazorApp1.Components.Layout
@using Repository.Model
@using BlazorApp1.Services
@inject IGoodService GoodService

@if (GoodDetail is null)
{
    <h2>Loading...</h2>
}
else
{
   <Toast @ref="toast"></Toast> 

    <div class="product-detail">
        <div class="product-img">
            <div id="product-img__big" class="product-img__big">
                <img src="@BigImage" alt="" class="product-img__big-img">
            </div>
            <div id="product-img__thumbnail" class="product-img__thumbnail">
                <img src="./Assets/Img/@Good.Category.CategoryId/@Good.GoodId/1.jpg" @onclick="@(e => UpdateBigImage(1))" alt="" class="product-img__thumbnail-img">
                <img src="./Assets/Img/@Good.Category.CategoryId/@Good.GoodId/2.jpg" @onclick="@(e => UpdateBigImage(2))" alt="" class="product-img__thumbnail-img">
                <img src="./Assets/Img/@Good.Category.CategoryId/@Good.GoodId/3.jpg" @onclick="@(e => UpdateBigImage(3))" alt="" class="product-img__thumbnail-img">
                <img src="./Assets/Img/@Good.Category.CategoryId/@Good.GoodId/4.jpg" @onclick="@(e => UpdateBigImage(4))" alt="" class="product-img__thumbnail-img">
            </div>
        </div>
        <div class="product-label__detail">
            <h1 class="product-name__detail">@Good.Name</h1>
            <div class="product-price__detail">
                <span class="product-price-current">
                    <span class="product-price-current">@Good.Price.ToString("N0")₫</span>
                </span>
            </div>
            <p class="prouduct-des__detail">
                <span>
                    <b>@Good.Name</b>
                    @GoodDetail.Description
                </span>
            </p>
            <div class="product__cart">
                <div class="product-buy">
                    <button id="liveToastBtn" class="product-btn__add-to-cart" @onclick="AddProductToCart">
                        <i class="fa-solid fa-cart-plus"></i>
                        Thêm vào giỏ hàng
                    </button>
                    <div class="product-btn__buy_detail">
                        <a href="" class="product-btn__buy-link" @onclick="PaymentBtn">Mua ngay</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="product-commit">
            <h3 class="product-label__commit">Lovell Garden CAM KẾT:</h3>
            <ul class="product-commit__list">
                <li class="product-commit__items">
                    Cung cấp các loại cây cảnh đa dạng với giá hợp lý
                </li>
                <li class="product-commit__items">
                    Miễn phí giao hàng cho đơn hàng trên
                    <strong>500.000đ</strong> (áp dụng tại các khu vực trong bán kính 20Km tính từ
                    nhà vườn)
                </li>
                <li class="product-commit__items">Tư vấn và hướng dẫn chăm sóc cây tận tình</li>
                <li class="product-commit__items">
                    Tư vấn kỹ lưỡng các vấn đề phong thuỷ, hợp mệnh -
                    hợp tuổi
                </li>
                <li class="product-commit__items">Cho thuê cây cảnh văn phòng</li>
                <li class="product-commit__items">
                    Hỗ trợ đổi trả sản phẩm trong vòng <strong>
                        3
                        ngày
                    </strong> sau khi mua
                </li>
            </ul>
        </div>
    </div>

    <div class="product-description">
        <div class="product-description__label">
            <h2 class="product-description__content-label">
                CHI TIẾT SẢN PHẨM
            </h2>
        </div>
        <div class="product-description__content">
            <p class="product-description__introduce">
                Giới thiệu @Good.Name
            </p>
            <ul class="product-description__introduce-list">
                <li class="product-description__introduce-detail">@GoodDetail.Introduce</li>
            </ul>
            <p class="product-description__characteristics">
                Đặc điểm
            </p>
            <ul class="product-description__characteristics-list">
                <li class="product-description__characteristics-detail">@GoodDetail.Character</li>
            </ul>
            <p class="product-description__meaningful">
                Ý nghĩa/Công dụng
            </p>
            <ul class="product-description__meaningful-list">
                <li class="product-description__meaningful-detail">@GoodDetail.Uses</li>
            </ul>
            <p class="product-description__plant">Cách trồng/chăm sóc</p>
            <ul class="product-description__plant-list">
                <li class="product-description__plant-detail">@GoodDetail.Plant</li>
            </ul>
        </div>
    </div>
}

@code {
    [Parameter]
    public Good Good { get; set; }
    public string BigImage { get; set; }

    [Inject]
    protected ICartService CartService { get; set; }
    [Inject]
    protected INavMenuService NavMenuService { get; set; }
    [Inject]
    protected NavigationManager NavigationManager { get; set; }

    public GoodDetail GoodDetail { get; set; }
    private Toast toast;

    protected override async Task OnInitializedAsync()
    {
        GoodDetail = await GoodService.GetGoodDetail(Good.GoodId);
        BigImage = $"./Assets/Img/{Good.Category.CategoryId}/{Good.GoodId}/1.jpg";
    }

    private void UpdateBigImage(int imgId)
    {
        BigImage = $"./Assets/Img/{Good.Category.CategoryId}/{Good.GoodId}/{imgId}.jpg";
    }

    private async Task AddProductToCart()
    {
        OrderDetail orderDetail = new OrderDetail();
        orderDetail.CategoryId = Good.Category.CategoryId;
        orderDetail.GoodId = Good.GoodId;
        orderDetail.GoodName = Good.Name;
        orderDetail.Price = Good.Price;
        orderDetail.Quantity = 1;

        await CartService.AddProductToCart(orderDetail);
        NavMenuService.ChangeCart();

        toast.ShowSuccess("Bạn đã thêm sản phẩm vào giỏ hàng thành công.");
    }

    private async Task PaymentBtn()
    {
        OrderDetail orderDetail = new OrderDetail();
        orderDetail.CategoryId = Good.Category.CategoryId;
        orderDetail.GoodId = Good.GoodId;
        orderDetail.GoodName = Good.Name;
        orderDetail.Price = Good.Price;
        orderDetail.Quantity = 1;

        await CartService.AddProductToCart(orderDetail);
        NavMenuService.ChangeCart();

        NavigationManager.NavigateTo("/Payment");
    }
}
